import java.util.ArrayList;
public class hiddenNode {//the class which generates objects for hidden nodes which are stored in an array in the network class
	private int label;
	private ArrayList<inputNode> linkedNodes; //details the order of the input nodes that are linked to the hidden node with their corresponding weights in the linkedWeights arrayList
	private ArrayList<Double> linkedWeights;
	private ArrayList<Double> linkedMomentum;//used in the momentum modification, lists the momentum associated with each weight going into the hidden node
	private double bias;
	private double weight;
	private double activationVal;//the value generated by the calculation of all the input node values and weights ran on the sigmoyd function
	private double error;
	
	private double momentum;
	private ArrayList<Double> initialLinkedWeights;
	
	
	public hiddenNode(double nodeWeight, double nodeBias, int numberHiddenNodes) {
		this.bias = nodeBias;
		this.weight = nodeWeight;
		setActivationVal(0);
		setError(0);
		setMomentum(0.0);
		linkedNodes = new ArrayList<inputNode>();
		linkedWeights = new ArrayList<Double>();
		initialLinkedWeights = new ArrayList<Double>();
		linkedMomentum = new ArrayList<Double>();
		while (numberHiddenNodes > 0) {
			linkedMomentum.add(0.0);
			numberHiddenNodes--;
		}
	}
	//getters and setters for each attribute and a few functions for adding to arrays etc
	
	public ArrayList<inputNode> getLinkedNodes() {
		return linkedNodes;
	}
	public ArrayList<Double> getLinkedWeights() {
		return linkedWeights;
	}
	
	public ArrayList<Double> getLinkedMomentum() {
		return linkedMomentum;
	}
	public void setLinkedMomentums(ArrayList<Double> momentums) {
		linkedMomentum = momentums;
	}
	public void setLinkedWeights(ArrayList<Double> newWeights) {
		
		linkedWeights = newWeights;
		
	}
	
	public double getBias() {
		return bias;
	}
	public void setBias(double newBias) {
		
		this.bias = newBias;
		
	}
	public double getWeight() {
		return weight;
	}
	public void setWeight(double newWeight) {
		this.weight = newWeight;
	}

	public void addLinkedNode(inputNode inptN) {
		linkedNodes.add(inptN);
		
	}
	public void addLinkedWeight(double weight) {
		linkedWeights.add(weight);
	}
	
	public void addInitialLinkedWeight(double weight) {
		initialLinkedWeights.add(weight);
	}

	public int getLabel() {
		return label;
	}

	public void setLabel(int label) {
		this.label = label;
	}

	public double getActivationVal() {
		return activationVal;
	}

	public void setActivationVal(double activationVal) {
		this.activationVal = activationVal;
	}

	public double getError() {
		return error;
	}

	public void setError(double error) {
		this.error = error;
	}

	public ArrayList<Double> getInitialLinkedWeights() {
		return initialLinkedWeights;
	}

	public void setInitialLinkedWeights(ArrayList<Double> initialLinkedWeights) {
		this.initialLinkedWeights = initialLinkedWeights;
	}

	public double getMomentum() {
		return momentum;
	}

	public void setMomentum(double momentum) {
		this.momentum = momentum;
	}
	
}
